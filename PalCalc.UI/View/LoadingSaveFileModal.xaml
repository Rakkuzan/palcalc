<adonisControls:AdonisWindow x:Class="PalCalc.UI.View.LoadingSaveFileModal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PalCalc.UI.View"
                             xmlns:vu="clr-namespace:PalCalc.UI.View.Utils"
        mc:Ignorable="d"
        xmlns:itl="clr-namespace:PalCalc.UI.Localization"
        xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        Title="{itl:LocalizedText LC_POPUP_TITLE_LOADING_SAVE_FILE}"
        ShowInTaskbar="False"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None"
                             PlaceTitleBarOverContent="True"
                             TitleVisibility="Collapsed"
                             IconVisibility="Collapsed"
                             SizeToContent="WidthAndHeight"
        d:DataContext="{x:Type itl:ILocalizedText}"
        >
    <adonisControls:AdonisWindow.Style>
        <Style TargetType="{x:Type adonisControls:AdonisWindow}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BorderBrush}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TitleBarForeground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
            <Setter Property="TitleBarBackground" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BorderBrush}}"/>
            <Setter Property="WindowButtonHighlightBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.WindowButtonHighlightBrush}}"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome ResizeBorderThickness="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"
                          CaptionHeight="0"
                          CornerRadius="0"
                          GlassFrameThickness="1, 2, 1, 1"
                          NonClientFrameEdges="None"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type adonisControls:AdonisWindow}">
                        <AdornerDecorator>
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True">

                                <Grid>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Border x:Name="WindowContent"
                                    Grid.Row="1"
                                    Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>

                                    <Border x:Name="TitleBar"
                                    Grid.Row="0"
                                    KeyboardNavigation.TabNavigation="None"
                                    KeyboardNavigation.DirectionalNavigation="None"
                                    Background="{TemplateBinding TitleBarBackground}"
                                    TextElement.Foreground="{TemplateBinding TitleBarForeground}"
                                    MinHeight="30">

                                        <DockPanel x:Name="PART_DragMoveThumb"
                                           LastChildFill="True"
                                           Background="{x:Null}">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid VerticalAlignment="Center"
                                              Margin="3, 0, 0, 0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Grid.Visibility>
                                                        <MultiBinding Converter="{x:Static adonisConverters:AllVisibilitiesToVisibilityConverter.Instance}">
                                                            <Binding Path="IconVisibility" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                                                            <Binding Path="TitleVisibility" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                                                        </MultiBinding>
                                                    </Grid.Visibility>

                                                    <Image x:Name="PART_IconPresenter"
                                                   Source="{Binding IconSource, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                   Visibility="{Binding IconVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                   Width="16"
                                                   Height="16"
                                                   Margin="5, 0, 0, 0"/>

                                                    <TextBlock Grid.Column="1"
                                                       Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                       Visibility="{Binding TitleVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                       VerticalAlignment="Center"
                                                       FontSize="11.5"
                                                       RenderOptions.ClearTypeHint="Auto"
                                                       TextOptions.TextRenderingMode="Auto"
                                                       TextOptions.TextFormattingMode="Display"
                                                       Margin="5, 0, 0, 0"/>
                                                </Grid>

                                                <ContentPresenter Grid.Column="1"
                                                          Content="{Binding TitleBarContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"/>
                                            </Grid>
                                        </DockPanel>
                                    </Border>
                                </Grid>
                            </Border>
                        </AdornerDecorator>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsActive" Value="False">
                                <Setter Property="TextElement.Foreground"
                                TargetName="TitleBar"
                                Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}"/>
                            </Trigger>

                            <Trigger Property="WindowState" Value="Maximized">

                                <Setter Property="BorderBrush"
                                TargetName="Border"
                                Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="WindowState" Value="Maximized" />
                                    <Condition Property="ShrinkTitleBarWhenMaximized" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="TitleBar" Property="MinHeight" Value="22" />
                            </MultiTrigger>

                            <Trigger Property="WindowStyle" Value="None">
                                <Setter TargetName="TitleBar" Property="Visibility" Value="Visible"/>
                            </Trigger>

                            <Trigger Property="PlaceTitleBarOverContent" Value="True">
                                <Setter TargetName="WindowContent" Property="Grid.Row" Value="0" />
                                <Setter TargetName="WindowContent" Property="Grid.RowSpan" Value="2" />
                                <Setter Property="TitleBarBackground" Value="{x:Null}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>

                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="WindowChrome.WindowChrome">
                        <Setter.Value>
                            <WindowChrome ResizeBorderThickness="0"
                                  CaptionHeight="0"
                                  CornerRadius="0"
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="WindowStyle" Value="None">

                    <Setter Property="WindowChrome.WindowChrome">
                        <Setter.Value>
                            <WindowChrome ResizeBorderThickness="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"
          CaptionHeight="0"
          CornerRadius="0"
          GlassFrameThickness="1, 2, 1, 1"
          NonClientFrameEdges="None"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </Style.Triggers>
        </Style>
    </adonisControls:AdonisWindow.Style>
    <StackPanel Orientation="Horizontal" vu:StackPanelExtensions.Spacing="10" Margin="15">
        <TextBlock Text="{Binding Value}" HorizontalAlignment="Center" VerticalAlignment="Center" />

        <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                        Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"
                        Width="20"
                        Height="20"
                        Focusable="False"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        />
    </StackPanel>
</adonisControls:AdonisWindow>
