<Page x:Class="PalCalc.UI.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:local="clr-namespace:PalCalc.UI"
      xmlns:v="clr-namespace:PalCalc.UI.View.Main"
      xmlns:vm="clr-namespace:PalCalc.UI.ViewModel"
      xmlns:mvm="clr-namespace:PalCalc.UI.ViewModel.Mapped"
      xmlns:m="clr-namespace:PalCalc.UI.Model"
      xmlns:itl="clr-namespace:PalCalc.UI.Localization"
      xmlns:sm="clr-namespace:PalCalc.Solver;assembly=PalCalc.Solver"
      xmlns:c="clr-namespace:PalCalc.UI.ViewModel.Converters"
      xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
      xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
      xmlns:vu="clr-namespace:PalCalc.UI.View.Utils"
      xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
      mc:Ignorable="d"
      d:Width="1280" d:Height="720"
      xmlns:zoom="clr-namespace:GraphSharp.Controls.Zoom;assembly=GraphSharp.Controls"
      xmlns:graphSharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
      VerticalAlignment="Stretch"
      HorizontalAlignment="Stretch"
      d:DataContext="{d:DesignInstance vm:MainWindowViewModel, IsDesignTimeCreatable=True}">
    <Page.Resources>
        <c:ValueVisibilityConverter x:Key="VVC" />
        <c:CollectionVisibilityConverter x:Key="CVC" />
    </Page.Resources>
    <Border Padding="5">
        <DockPanel>
            <Menu DockPanel.Dock="Top" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}">
                <MenuItem Header="{itl:LocalizedText LC_LANGUAGE}" ItemsSource="{Binding Locales}" Padding="5">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Header" Value="{Binding Label}" />
                            <Setter Property="IsCheckable" Value="True" />
                            <Setter Property="IsChecked" Value="{Binding IsSelected}" />
                            <Setter Property="Command" Value="{Binding SelectCommand}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </Menu>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="220" Width="300"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="232*" MinWidth="250" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="80*" MinWidth="280"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="0">
                    <StackPanel DockPanel.Dock="Top">
                        <GroupBox Header="{itl:LocalizedText LC_SAVE_FILE}">
                            <v:SaveSelectorView DataContext="{Binding SaveSelection}" />
                        </GroupBox>

                        <GroupBox Header="{itl:LocalizedText LC_GAME_SETTINGS}" Margin="0,5,0,0">
                            <v:GameSettingsView DataContext="{Binding SelectedGameSettings}" />
                        </GroupBox>
                    </StackPanel>

                    <Grid Margin="0,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="100" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <GroupBox Header="{itl:LocalizedText LC_TARGET_PALS}" Grid.Row="0">
                            <v:PalTargetListView BorderThickness="0" DataContext="{Binding PalTargetList}" />
                        </GroupBox>

                        <Grid Visibility="{Binding SolverQueue.QueuedItems.Count, Converter={StaticResource VVC}}" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" MinHeight="100" />
                            </Grid.RowDefinitions>

                            <GridSplitter Grid.Row="0" Background="{x:Null}" Height="5" ResizeBehavior="CurrentAndNext" />

                            <!-- TODO ITL -->
                            <GroupBox Header="Jobs"
                                      Grid.Row="1"
                                      Visibility="{Binding SolverQueue.QueuedItems.Count, Converter={StaticResource VVC}}"
                                      MinHeight="100"
                                      >
                                <ScrollViewer>
                                    <ItemsControl ItemsSource="{Binding SolverQueue.QueuedItems}"
                                                  dd:DragDrop.IsDragSource="True"
                                                  dd:DragDrop.IsDropTarget="True"
                                                  dd:DragDrop.DragHandler="{Binding SolverQueue}"
                                                  dd:DragDrop.DropHandler="{Binding SolverQueue}"
                                                  dd:DragDrop.DragDropContext="JobsList"
                                                  Padding="0"
                                                  >
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="mvm:PalSpecifierViewModel">
                                                <Border Padding="5" HorizontalAlignment="Stretch" BorderThickness="1" Cursor="Hand">
                                                    <Border.InputBindings>
                                                        <MouseBinding Gesture="LeftClick" Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.SolverQueue.SelectItemCommand}" CommandParameter="{Binding}" />
                                                    </Border.InputBindings>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Background" Value="Transparent" />

                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding LatestJob.CurrentState}" Value="Running">
                                                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}" />
                                                                </DataTrigger>

                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBorderBrush}}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <Grid HorizontalAlignment="Stretch">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="10" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>

                                                        <Image Source="{Binding TargetPal.Icon}" Height="48" Grid.Column="0" VerticalAlignment="Center" />
                                                        <StackPanel HorizontalAlignment="Stretch" Grid.Column="2">
                                                            <Label Content="{Binding TargetPal.Name.Value}" />

                                                            <vu:SpacedWrapPanel Orientation="Horizontal" HorizontalAlignment="Stretch" HorizontalSpacing="15">
                                                                <TextBlock Text="{Binding RequiredPassivesCollection.RequiredDescription.Value}" />

                                                                <TextBlock Text="{Binding OptionalPassivesCollection.OptionalDescription.Value}" Visibility="{Binding OptionalPassivesCollection.Passives, Converter={StaticResource CVC}}" />
                                                            </vu:SpacedWrapPanel>

                                                            <StackPanel vu:StackPanelExtensions.Spacing="1">
                                                                <StackPanel.Resources>
                                                                    <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                                                                        <Setter Property="Minimum" Value="0" />
                                                                        <Setter Property="Maximum" Value="100" />
                                                                        <Setter Property="adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled" Value="False" />
                                                                        <Setter Property="Opacity" Value="0.5" />
                                                                        <Setter Property="IsHitTestVisible" Value="False" />

                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding LatestJob.CurrentState}" Value="Running">
                                                                                <Setter Property="adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled" Value="True" />
                                                                                <Setter Property="Opacity" Value="1" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Resources>

                                                                <ProgressBar Value="{Binding LatestJob.SolverProgress, Mode=OneWay}" Height="10" />

                                                                <ProgressBar Value="{Binding LatestJob.StepProgress, Mode=OneWay}" Height="10" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </GroupBox>
                        </Grid>
                    </Grid>
                </DockPanel>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                <DockPanel Grid.Column="2">
                    <v:SolverControlsView DockPanel.Dock="Top" DataContext="{Binding SolverControls}" Margin="0,0,0,5" Padding="5" HorizontalContentAlignment="Right" Background="{DynamicResource ResourceKey={x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" adonisExtensions:LayerExtension.IncreaseLayer="True" />

                    <StackPanel DockPanel.Dock="Bottom"
                                Visibility="{Binding PalTarget.CurrentPalSpecifier.LatestJob, Converter={StaticResource VVC}, FallbackValue=Collapsed, Mode=OneWay}"
                                >
                        <Grid>
                            <ProgressBar Value="{Binding PalTarget.CurrentPalSpecifier.LatestJob.SolverProgress, Mode=OneWay}" adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="False" />
                            <TextBlock Text="{Binding PalTarget.CurrentPalSpecifier.LatestJob.SolverStatusMessage.Value}" Margin="10,5,0,5" />
                        </Grid>
                        <Grid Margin="0,0,0,0">
                            <ProgressBar Value="{Binding PalTarget.CurrentPalSpecifier.LatestJob.StepProgress, Mode=OneWay}" adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="False" />
                            <TextBlock Text="{Binding PalTarget.CurrentPalSpecifier.LatestJob.StepStatusMessage.Value}" Margin="10,5,0,5" />
                        </Grid>
                    </StackPanel>

                    <v:BreedingResultView DataContext="{Binding PalTarget.CurrentPalSpecifier.CurrentResults.SelectedResult}" />
                </DockPanel>

                <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                <Grid Grid.Column="4">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                
                    <GroupBox Header="{itl:LocalizedText LC_TARGET_PAL}" Grid.Row="0" IsEnabled="{Binding PalTarget.CanEdit}">
                        <v:PalTargetView DataContext="{Binding PalTarget}" />
                    </GroupBox>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30*" MinHeight="180" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="60*" MinHeight="150" />
                        </Grid.RowDefinitions>

                        <GroupBox Header="{itl:LocalizedText LC_SOURCE_PALS}" Grid.Row="0" Margin="0,5,0,0" IsEnabled="{Binding PalTarget.CanEdit}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel vu:StackPanelExtensions.Spacing="5" Orientation="Vertical" Grid.Row="0">
                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding PalTarget.CurrentPalSpecifier.IncludeBasePals}">
                                        <TextBlock Text="{itl:LocalizedText LC_INCLUDE_PALS_AT_BASE}" TextWrapping="Wrap" />
                                    </CheckBox>

                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding PalTarget.CurrentPalSpecifier.IncludeCagedPals}">
                                        <TextBlock Text="{itl:LocalizedText Code=LC_INCLUDE_PALS_IN_CAGES}" TextWrapping="Wrap" />
                                    </CheckBox>

                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding PalTarget.CurrentPalSpecifier.IncludeCustomPals}">
                                        <TextBlock Text="{itl:LocalizedText Code=LC_INCLUDE_CUSTOM_PALS}" TextWrapping="Wrap" />
                                    </CheckBox>
                                </StackPanel>

                                <Separator Grid.Row="1" Margin="0,10,0,10" />

                                <v:PalSourceTreeView DataContext="{Binding PalTarget.PalSource}" Grid.Row="2" />
                            </Grid>
                        </GroupBox>

                        <GridSplitter Grid.Row="1" Background="{x:Null}" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock TextWrapping="Wrap" Visibility="{Binding ShowNoResultsNotice, Converter={StaticResource VVC}, FallbackValue=Collapsed}" Grid.Row="0" Padding="5">
                                <Run Text="{itl:LocalizedText Code=LC_NO_RESULTS_FAQ_1}" />
                                <Hyperlink NavigateUri="https://github.com/tylercamp/palcalc/wiki/Frequently-Asked-Questions#why-arent-i-getting-any-results"
                                           RequestNavigate="Hyperlink_RequestNavigate">
                                    <Run Text="{itl:LocalizedText Code=LC_NO_RESULTS_FAQ_2}" />
                                </Hyperlink>
                                <Run Text="{itl:LocalizedText Code=LC_NO_RESULTS_FAQ_3}" />
                            </TextBlock>

                            <GroupBox Header="{Binding PalTarget.CurrentPalSpecifier.CurrentResults.ResultsHeading.Value, FallbackValue=''}" Grid.Row="1">
                                <v:BreedingResultListView BorderThickness="0" DataContext="{Binding PalTarget.CurrentPalSpecifier.CurrentResults}" />
                            </GroupBox>
                        </Grid>
                    </Grid>

                    <StackPanel Grid.Row="2">
                        <Button Width="50" Click="AboutButton_Click" Margin="0,5,0,5" Content="{itl:LocalizedText LC_ABOUT_APP}" />
                        <TextBlock Visibility="{Binding UpdatesMessageVisibility}" TextWrapping="Wrap" TextAlignment="Center" FontSize="20">
                            <!-- NavigateUri unused, value must be set for event to trigger -->
                            <Hyperlink NavigateUri="http://github.com" RequestNavigate="DownloadUpdateLink_RequestNavigate">
                                <TextBlock Text="{itl:LocalizedText LC_UPDATE_AVAILABLE}" />
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>
        </DockPanel>
    </Border>
</Page>
