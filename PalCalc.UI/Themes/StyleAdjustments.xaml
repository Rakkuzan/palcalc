<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                    xmlns:dnkc="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox">
    
    <!--
    these changes are reloaded after the WPFDarkTheme theme has been applied, since styles with `BasedOn`
    won't update when the underlying `BasedOn` style changes - see App.xaml.cs
    
    (otherwise these would just be in App.xaml)
    -->
    
    <!--
    fix for XAML binding errors involving combobox
    https://gist.github.com/TobiasSekan/73a93c2dfea4a051ff72abb5218d6f8f
    -->
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!-- (same for TreeViewItem) -->
    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type dnkc:AutoCompleteComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />

    <!-- fixes general text bluriness -->
    <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}" x:Key="StandardListViewItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"/>

                        <Border x:Name="SpotlightLayer"
                Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
                BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
                adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                SnapsToDevicePixels="False"/>

                        <ContentPresenter
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <!--<Color x:Key="{x:Static adonisUi:Colors.AccentColor}">#206BD4</Color>
    <Color x:Key="{x:Static adonisUi:Colors.AlertColor}">#D49220</Color>
    <Color x:Key="{x:Static adonisUi:Colors.ErrorColor}">#C22B2B</Color>-->
</ResourceDictionary>