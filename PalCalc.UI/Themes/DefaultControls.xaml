<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:a="clr-namespace:Theme.WPF.Themes.Attached"
                    xmlns:local="clr-namespace:Theme.WPF.Themes">
    
    <!-- This is just a copy of `Controls.xaml` with all styles empty (defaults) -->
    
    <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">Fade</PopupAnimation>
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="FocusVisual" />

    <!-- Normal focus visual looks a bit better -->
    <Style x:Key="OptionMarkFocusVisual" />

    <Style x:Key="ExpanderHeaderFocusVisual" />

    <Style x:Key="TreeViewItemFocusVisual" />

    <Style TargetType="{x:Type Button}" />

    <Style TargetType="{x:Type ToggleButton}" />

    <Style x:Key="StaticBorderToggleButtonStyle" TargetType="{x:Type ToggleButton}" />

    <Style TargetType="{x:Type RepeatButton}" />

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}" />

    <Style TargetType="{x:Type Slider}" />

    <Style x:Key="AbletonLiveSlider" TargetType="{x:Type Slider}" />

    <!-- ######################## Scroll Viewer ######################## -->

    <Style x:Key="ScrollBarThumbVertical_THICK" TargetType="{x:Type Thumb}" />

    <Style x:Key="ScrollBarThumbHorizontal_THICK" TargetType="{x:Type Thumb}" />

    <Style x:Key="CompactScrollBarButton" TargetType="{x:Type RepeatButton}" />

    <Style x:Key="ScrollBarThumbVertical_THIN" TargetType="{x:Type Thumb}" />

    <Style x:Key="ScrollBarThumbHorizontal_THIN" TargetType="{x:Type Thumb}" />

    <Style x:Key="ScrollBarButton_THIN" TargetType="{x:Type RepeatButton}" />

    <Style x:Key="ScrollBarButton_THICK" TargetType="{x:Type RepeatButton}" />

    <Style x:Key="ScrollBarStyle_THIN" TargetType="{x:Type ScrollBar}" />

    <Style x:Key="ScrollBarStyle_THICK" TargetType="{x:Type ScrollBar}" />

    <!-- Switch between automatic thin and thick scroll bars here -->
    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarStyle_THIN}"/>

    <Style TargetType="{x:Type ScrollViewer}" />

    <local:ScrollViewerInnerBorderThicknessConverter x:Key="ScrollViewerWithPanelBorderBarsBorderThicknessConverter"/>

    <Style x:Key="ScrollViewerWithPanelBorderBars" TargetType="{x:Type ScrollViewer}" />

    <Style TargetType="{x:Type Thumb}" />

    <Style TargetType="{x:Type GridSplitter}" />

    <Style TargetType="{x:Type ProgressBar}" />

    <Style TargetType="{x:Type ToolTip}" />

    <Style TargetType="{x:Type Separator}" />

    <Style x:Key="VerticalSeparator" TargetType="{x:Type Separator}" />

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}" />

    <Style TargetType="{x:Type StatusBar}" />

    <Style TargetType="{x:Type CheckBox}" />

    <Style TargetType="{x:Type RadioButton}" />

    <Style TargetType="{x:Type TextElement}" />

    <Style TargetType="{x:Type TextBlock}" />

    <Style TargetType="{x:Type Label}" />

    <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" />

    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}" />

    <Style TargetType="{x:Type RichTextBox}" />

    <Style TargetType="{x:Type TextBox}" />

    <Style x:Key="HintedTextBox" TargetType="{x:Type TextBox}" />

    <Style x:Key="HintedPasswordBox" TargetType="{x:Type PasswordBox}" />

    <Style TargetType="{x:Type PasswordBox}" />

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}" />

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}" />

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}" />

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}" />

    <Style TargetType="{x:Type Expander}" />

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}" />

    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}" />

    <Style TargetType="{x:Type ComboBoxItem}" />

    <Style TargetType="{x:Type ComboBox}" />

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" />

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}" />

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}" />

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}" />

    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}" />

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}" />

    <Style TargetType="{x:Type DataGridColumnHeader}" />

    <Style TargetType="{x:Type DataGridRow}" />

    <BooleanToVisibilityConverter x:Key="B2VConverter"/>
    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}" />

    <Style TargetType="{x:Type DataGridRowHeader}" />

    <Style TargetType="{x:Type DataGridCell}" />

    <Style x:Key="DataGridTextColumnElementStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}"/>
    <Style x:Key="DataGridTextColumnEditingElementStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" />

    <Style x:Key="DataGridComboBoxColumnEditingElementStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}" />

    <Style x:Key="DataGridCheckBoxColumnElementStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" />
    <Style x:Key="DataGridCheckBoxColumnEditingElementStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DataGridCheckBoxColumnElementStyle}"/>

    <Style TargetType="{x:Type DataGrid}" />

    <Style TargetType="{x:Type ListBoxItem}" />

    <Style x:Key="ListBoxItemNoBorder" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}" />

    <Style TargetType="{x:Type ListBox}" />

    <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItem_DefaultItemContainerStyle" />
    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItem_DefaultItemContainerStyle}" />
    <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItem_DataViewItemContainerStyle" BasedOn="{StaticResource {x:Type ListViewItem}}" />

    <Style TargetType="{x:Type ListView}" />

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}"/>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}"/>
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}"/>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}"/>

    <Style TargetType="{x:Type ToolBarTray}" />

    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}" />

    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}" />

    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}" />

    <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}" />

    <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}" />

    <Style TargetType="{x:Type ToolBar}" />

    <Style TargetType="{x:Type TabItem}" />

    <Style x:Key="NoLeftBorder" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}" />

    <Style x:Key="SelectedFullBorder" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}" />

    <Style x:Key="NoOffsetTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}" />

    <Style x:Key="NoBorderTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}" />

    <Style TargetType="{x:Type TabControl}" />

    <Style x:Key="NoOffsetTabControl" TargetType="{x:Type TabControl}" />

    <Style x:Key="NoOffsetAndNoContentTabControl" TargetType="{x:Type TabControl}" />

    <Style TargetType="{x:Type GroupBox}" />

    <Style x:Key="NoBorderGroupBox" TargetType="{x:Type GroupBox}" />

    <Style x:Key="ThinGroupBox" TargetType="{x:Type GroupBox}" />

    <Style x:Key="SquaredGroupBox" TargetType="{x:Type GroupBox}" />

    <Style x:Key="DefaultGroupbox" TargetType="{x:Type GroupBox}" />

    <Style TargetType="{x:Type MenuItem}" />

    <Style TargetType="{x:Type Menu}" />

    <Style TargetType="{x:Type ContextMenu}" />
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}" />

    <!-- (CHANGED) -->
    <!-- Was having issues getting this to apply in PalSourceTreeView, referencing by key was the only thing that worked -->
    <Style TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItemStyle" />

    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}"/>
    <Style TargetType="{x:Type TreeView}" />

    <Style TargetType="{x:Type Calendar}" />
    <Style TargetType="{x:Type CalendarItem}" />
    <Style TargetType="{x:Type DatePickerTextBox}" />
    <Style TargetType="{x:Type DatePicker}" />

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}" />
</ResourceDictionary>